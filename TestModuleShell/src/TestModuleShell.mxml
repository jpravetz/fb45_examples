<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009" 
					   xmlns:s="library://ns.adobe.com/flex/spark" 
					   xmlns:shell="test.shell.*" 
					   xmlns:parsley="http://www.spicefactory.org/parsley"
					   xmlns:app="test.shell.*" 
					   minWidth="300" minHeight="400"
					   width="450" height="700"
					   preinitialize="onPreInit()"
					   initialize="onInit()"
					   creationComplete="onCreationComplete()"
					   viewSourceURL="srcview/index.html"
					   >
	<fx:Declarations>
		<parsley:ContextBuilder config="TestModuleShellConfig"  />
		<!-- Require so that context can be injected into this class -->
		<parsley:Configure />
	</fx:Declarations>
	
	<s:layout>
		<s:VerticalLayout paddingTop="10" paddingLeft="10" paddingRight="10" paddingBottom="10" />
	</s:layout>
	
	<fx:Metadata>
		[Event(name="view.inbox",type="com.cayo.canmore.events.ViewChangeEvent")]
		[Event(name="view.provider",type="com.cayo.canmore.events.ViewChangeEvent")]
		[Event(name="view.debug",type="com.cayo.canmore.events.ViewChangeEvent")]
		[ManagedEvents("view.inbox,view.provider,view.debug")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			import com.cayo.spicefactory.logging.Logging;
			
			import mx.events.ModuleEvent;
			
			import org.spicefactory.lib.logging.LogContext;
			import org.spicefactory.lib.logging.Logger;
			import org.spicefactory.parsley.core.context.Context;
			
			import test.shell.Module4Window;
			import test.shell.ViewChangeEvent;
			
			private static const DEFAULT_LOGGING:String = Logging.SOS;
			private static var _log:Logger;

			[Inject] public var context:Context;
			
			private function onPreInit() : void 
			{
				Logging.addLogAppender( DEFAULT_LOGGING, false );
			}
			
			private function onInit() : void 
			{
			}
			
			protected function onCreationComplete():void
			{
				_log = LogContext.getLogger( TestModuleShell );
//				module1Loader.loadModule( "test/module1/Module1.swf" );
				module2Loader.addEventListener(ModuleEvent.READY,onModuleReady);
				module2Loader.addEventListener(ModuleEvent.ERROR,onModuleError);
				module2Loader.loadModule( "assets/modules/test/module3/Module3.swf" );
			}
			
			private function onModuleReady(event:ModuleEvent):void 
			{
				_log.debug( "Module3 load complete" );
				module2Loader.removeEventListener(ModuleEvent.READY,onModuleReady);
				module2Loader.removeEventListener(ModuleEvent.ERROR,onModuleError);
			}
			
			private function onModuleError(event:ModuleEvent):void 
			{
				_log.debug( "Module3 error: {0}", event.errorText );
				module2Loader.removeEventListener(ModuleEvent.READY,onModuleReady);
				module2Loader.removeEventListener(ModuleEvent.ERROR,onModuleError);
			}
			
			private function onModule4Button():void 
			{
				_log.debug( "---- Pressed button to load Module4 ----" );
				var window:Module4Window = new Module4Window();
				context.viewManager.addViewRoot(window);
				window.open();
			}
		]]>
	</fx:Script>
	
	<s:Button label="Open Module4 Window" click="onModule4Button()" />
	
	<s:HGroup width="100%" >
		<shell:ShellPanel id="mainApp"  width="50%"/>
		<shell:DataMonitor width="50%" height="{mainApp.height}"/>
	</s:HGroup>
	
	<s:HGroup width="100%" >
		<s:VGroup height="100" width="10" />
		<s:ModuleLoader id="module1Loader" width="50%" />
		<s:ModuleLoader id="module2Loader" width="50%" />
	</s:HGroup>
	
	<s:Panel width="100%" height="100%" title="View Stack of Modules" minHeight="100" >
		<s:VGroup width="100%" height="100%" >
			<s:HGroup width="100%" >
				<s:Button label="Inbox" click="dispatchEvent(new ViewChangeEvent(ViewChangeEvent.INBOX))" />
				<s:Button label="Provider" click="dispatchEvent(new ViewChangeEvent(ViewChangeEvent.PROVIDER))" />
				<s:Button label="Debug" click="dispatchEvent(new ViewChangeEvent(ViewChangeEvent.DEBUG))" />
			</s:HGroup>
			<shell:ContentRegion width="100%" height="100%" />
		</s:VGroup>
	</s:Panel>
	
</s:WindowedApplication>
